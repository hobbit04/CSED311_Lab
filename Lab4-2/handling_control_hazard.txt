BranchUnit: bcond를 만들던 부분을 가져옴. 
input: rs1, rs2, pc, imm, opcode, funct3
output: (32bits)address, (1bit)is_flush

address: branch를 taken하는 경우 or jal/jalr인 경우 계산되고 pc + imm or rs1 + imm 을 가짐
is_flush: branch를 taken 하거나 jal/jalr인 경우 1로 설정

어떻게 jal/jalr일 때 pc를 write back 할 것인가
1. alu에 pc값을 사용할 수 있도록 연결
2. WB 단계에서 opcode를 통해 확인하고 jump인 경우 WB까지 전달된 pc에 4를 더한 값을 WB

2번을 하려면, WB까지 pc+4의 값과, jump인지 아닌지를 알 수 있는 방법이 필요함. opcode를 쭉 가져오거나 is_jump라는 control 값을 추가..
is_jump가 나을 듯.

그러면 컨트롤 유닛을 수정해야 함. 컨트롤 유닛은 ID 단계에서 실행 -> ID_EX_is_jump, EX_MEM_is_jump, MEM_WB_is_jump가 추가 되어야 함.
pc+4 도 넘겨야 하기 떄문에 EX_MEM_pc, MEM_WB_pc 도 추가 되어야 함

rd는 잘 전달되고 있는 것을 확인했음.. 문제는 전달할 값